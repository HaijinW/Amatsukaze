<UserControl x:Class="Amatsukaze.Views.ProfileSettingPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:Amatsukaze.ViewModels" 
             xmlns:c="clr-namespace:Amatsukaze.Components" 
             xmlns:m="clr-namespace:Amatsukaze.Models" 
             mc:Ignorable="d" 
             d:DesignHeight="1500" d:DesignWidth="500"
             d:DataContext="{d:DesignInstance {x:Type vm:ProfileSettingViewModel}}">

    <UserControl.Resources>
        <ResourceDictionary Source="CommonResources.xaml"/>
    </UserControl.Resources>
    
    <i:Interaction.Triggers>
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="FromProfile">
            <l:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="Confirm" Messenger="{Binding Messenger}">
            <l:ConfirmationDialogInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>
    
    <DockPanel>

        <DockPanel DockPanel.Dock="Top">
            <TextBlock DockPanel.Dock="Left" Text="プロファイル" VerticalAlignment="Center" Margin="5"/>
            <Button DockPanel.Dock="Right" Content="削除" Margin="5" Height="30" ToolTip="現在のプロファイル削除します" Command="{Binding DeleteProfileCommand}"/>
            <Button DockPanel.Dock="Right" Content="新規" Margin="5" Height="30" ToolTip="現在のプロファイルをコピーして新しいプロファイルを作成します" Command="{Binding NewProfileCommand}"/>
            <Button DockPanel.Dock="Right" Content="適用" Margin="5" Height="30" Width="60" Command="{Binding ApplyProfileCommand}" />
            <ComboBox ItemsSource="{Binding Model.ProfileList}" Margin="5" Height="22" SelectedItem="{Binding Model.SelectedProfile, Mode=TwoWay}"/>
        </DockPanel>
        
        <Separator DockPanel.Dock="Top"/>

        <TextBlock DockPanel.Dock="Bottom" TextWrapping="Wrap" VerticalAlignment="Top" Margin="0,0.333,74,0">
            <Run Text="{Binding Model.SelectedProfile.SettingWarningText}" Foreground="Red" /><Run Text=" "/><Run Text="「適用」でサーバに反映。「更新」を押すと編集中の設定が失われるので注意"/>
        </TextBlock>
        
        <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.Resources>
                    <Style x:Key="ExtendDuration" TargetType="FrameworkElement">
                        <Setter Property="ToolTipService.ShowDuration" Value="30000" />
                    </Style>
                    <Style TargetType="TextBox" BasedOn="{c:MultiStyle . ExtendDuration}" />
                    <Style TargetType="Slider" BasedOn="{c:MultiStyle . ExtendDuration}" />
                    <Style TargetType="ComboBox" BasedOn="{c:MultiStyle . ExtendDuration}" />
                    <Style TargetType="CheckBox" BasedOn="{c:MultiStyle . ExtendDuration}" />
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition />
                </Grid.RowDefinitions>

                <StackPanel>
                    <TextBlock HorizontalAlignment="Right" Text="エンコーダ" VerticalAlignment="Top" Margin="0,6"/>
                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,28">エンコーダ<LineBreak/>追加オプション</TextBlock>

                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Top" TextAlignment="Right">JoinLogoScp<LineBreak/>コマンドファイル</TextBlock>
                    <TextBlock HorizontalAlignment="Right" Text="オプション" VerticalAlignment="Top" Margin="0"/>
                    <TextBlock HorizontalAlignment="Right" Text="メインフィルタ" VerticalAlignment="Top" Margin="0,6"/>
                    <TextBlock HorizontalAlignment="Right" Text="ポストフィルタ" VerticalAlignment="Top" Margin="0,6"/>
                </StackPanel>

                <StackPanel Grid.Column="1" Margin="10,0">
                    <StackPanel.Resources>
                        <CollectionViewSource x:Key="NullList" Source="{x:Static m:NullValue.Array}"/>
                        <CollectionViewSource x:Key="JLSCommandList" Source="{Binding Model.JlsCommandFiles}"/>
                    </StackPanel.Resources>
                    <ComboBox Margin="0,3" HorizontalAlignment="Left" VerticalAlignment="Top" Width="120" 
                              ItemsSource="{Binding Model.SelectedProfile.EncoderList}"
                              SelectedIndex="{Binding Model.SelectedProfile.EncoderTypeInt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <TextBox Margin="0,3" Height="85" TextWrapping="Wrap"
                             Text="{Binding Model.SelectedProfile.EncoderOption, Mode=TwoWay}"
                             VerticalAlignment="Top"
                             ToolTip="入力ファイルの解像度、アスペクト比、インタレースフラグ、&#xA;フレームレート、カラーマトリクス等は（自動ビットレートONの場合はビットレート設定も）&#xA;自動で追加されるので不要です。"/>

                    <ComboBox Margin="0,3" Height="23" 
                      SelectedItem="{Binding Model.SelectedProfile.JLSCommandFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" 
                          ToolTip="CM判定に使います。">
                        <ComboBox.Resources>
                            <DataTemplate DataType="{x:Type m:NullValue}">
                                <TextBlock>チャンネル設定に従う</TextBlock>
                            </DataTemplate>
                        </ComboBox.Resources>
                        <ComboBox.ItemsSource>
                            <CompositeCollection>
                                <CollectionContainer Collection="{Binding Source={StaticResource NullList}}"/>
                                <CollectionContainer Collection="{Binding Source={StaticResource JLSCommandList}}"/>
                            </CompositeCollection>
                        </ComboBox.ItemsSource>
                    </ComboBox>
                    <DockPanel>
                        <CheckBox Content="チャンネル設定に従う" DockPanel.Dock="Right" x:Name="JLSOptionEnable" 
                                  IsChecked="{Binding Model.SelectedProfile.EnableJLSOption, Mode=TwoWay, Converter={StaticResource InverseBooleanConverter}}"/>
                        <TextBox ToolTip="JoinLogoScpのオプション"
                                 Text="{Binding Model.SelectedProfile.JLSOption, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 IsEnabled="{Binding Model.SelectedProfile.EnableJLSOption, Mode=OneWay}"/>
                    </DockPanel>
                    <ComboBox Margin="0,3" Height="23"
                      ItemsSource="{Binding Model.MainScriptFiles}"
                      Text="{Binding Model.SelectedProfile.FilterPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top"
                          ToolTip="メインとなるフィルタを設定します。" />
                    <ComboBox Margin="0,3" Height="23"
                      ItemsSource="{Binding Model.PostScriptFiles}"
                      Text="{Binding Model.SelectedProfile.PostFilterPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top"
                          ToolTip="メインフィルタの後に掛けるフィルタを設定します。" />

                </StackPanel>

                <TextBlock Grid.Row="1" HorizontalAlignment="Left" TextWrapping="Wrap" Text="MPEG2デコーダ" VerticalAlignment="Top" Margin="54,6,0,0"/>
                <TextBlock Grid.Row="1" HorizontalAlignment="Left" TextWrapping="Wrap" Text="H264デコーダ" VerticalAlignment="Top" Margin="65,34,0,0"/>

                <ComboBox Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Margin="10,4,0,0" VerticalAlignment="Top" Width="120" 
                       ItemsSource="{Binding Model.SelectedProfile.Mpeg2DecoderList}"
                          SelectedIndex="{Binding Model.SelectedProfile.Mpeg2DecoderInt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                       ToolTip="デフォルト(CPU)が一番速いと思います。&#xA;CUVIDにするとCPU負荷が減るのでトータルでは速くなるかもしれません。&#xA;QSVは現バージョンのFFmpegが壊れてて使えません。"/>
                <ComboBox Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Margin="10,31,0,0" VerticalAlignment="Top" Width="120"
                      ItemsSource="{Binding Model.SelectedProfile.H264DecoderList}"
                          SelectedIndex="{Binding Model.SelectedProfile.H264DecoderInt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                       ToolTip="CUVIDの方が速いです。&#xA;QSVは現バージョンのFFmpegが壊れてて使えません。"/>

                <TextBlock Grid.Row="2" HorizontalAlignment="Right" Text="出力フォーマット" VerticalAlignment="Top" Margin="0,8,1,0"/>
                <ComboBox Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" Margin="10,5.667,0,0" VerticalAlignment="Top" Width="78"
                       ItemsSource="{Binding Model.SelectedProfile.FormatList}" 
                       SelectedIndex="{Binding Model.SelectedProfile.OutputFormatInt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                       ToolTip="MP4の場合、ASS字幕は別ファイルとして出力されます"/>

                <TextBlock Grid.Row="2" HorizontalAlignment="Right" Text="出力選択" VerticalAlignment="Top" Margin="0,35,1,0"/>
                <ComboBox Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" Margin="10,33,0,0" VerticalAlignment="Top" Width="130"
                       ItemsSource="{Binding Model.SelectedProfile.OutputOptionList}" 
                       SelectedItem="{Binding Model.SelectedProfile.OutputMask, Mode=TwoWay}"
                       ToolTip="CMカットの精度は100%ではありません"/>

                <TextBlock Grid.Row="2" HorizontalAlignment="Right" Text="VFRフレームタイミング" VerticalAlignment="Top" Margin="0,62,1,0"/>
                <ComboBox Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" Margin="10,60,0,0" VerticalAlignment="Top" Width="80"
                       ItemsSource="{Binding Model.SelectedProfile.VFRFpsList}" 
                       SelectedIndex="{Binding Model.SelectedProfile.VFRFps, Mode=TwoWay}"
                       ToolTip="24fpsフレームのフレーム時刻に影響します"/>
                
                <StackPanel Grid.Row="3" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Right" Height="16" Margin="0,3" Text="リネーム"/>
                    <TextBlock HorizontalAlignment="Right" Height="16" Margin="0,15" Text="SCRename書式"/>
                    <TextBlock HorizontalAlignment="Right" Text="" VerticalAlignment="Top" Margin="0,3"/>
                    <TextBlock HorizontalAlignment="Right" Text="エンコード設定" VerticalAlignment="Top" Margin="0,3"/>
                </StackPanel>
                <StackPanel Grid.Row="3" Grid.Column="1" Margin="10,0">
                    <CheckBox Height="16" Margin="0,3"  Content="SCRenameによるリネームを行う" 
                              IsChecked="{Binding Model.SelectedProfile.EnableRename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ToolTip="SCRenameで適切なファイル名を取得してエンコード後、そのファイル名を設定します" />

                    <TextBox Margin="0,3" Height="40" TextWrapping="Wrap"
                             Text="{Binding Model.SelectedProfile.RenameFormat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             VerticalAlignment="Top"
                             ToolTip="空欄にするとデフォルト書式を設定します"/>

                    <CheckBox Height="16" Margin="0,3"  Content="ジャンルごとにフォルダ分け" 
                              IsChecked="{Binding Model.SelectedProfile.EnableGunreFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ToolTip="SCRenameで名前が取得できた場合はフォルダ分けされません。" />

                    <CheckBox Margin="0,3" Content="2パス"
                          IsChecked="{Binding Model.SelectedProfile.TwoPass, Mode=TwoWay}" VerticalAlignment="Top"/>
                </StackPanel>

                
                <TextBlock Grid.Row="4" HorizontalAlignment="Left" Text="ビットレート設定" VerticalAlignment="Top" Margin="0,76.667,0,0"/>
                <TextBlock Grid.Row="4" Grid.Column="1" Text="CMビットレート倍率" Margin="5,5,0,0" />
                <TextBox Grid.Row="4" Grid.Column="1" HorizontalAlignment="Left" Margin="100,5,0,0" VerticalAlignment="Top" Width="50" Height="23" Grid.RowSpan="2"
                     Text="{Binding Model.SelectedProfile.BitrateCM, Mode=TwoWay, StringFormat=\{0:F\}, UpdateSourceTrigger=PropertyChanged}"
                     ToolTip="CMのビットレートを下げたいときに1より小さい値（0.3など）を設定すると有効です。&#xA;QSVEnc,NVEncで通常出力の場合は対応していません。"/>

                <CheckBox x:Name="autoBitrateCheck" Grid.Row="4" Grid.Column="1" HorizontalAlignment="Left" Content="自動ビットレート指定" Margin="9.667,33,0,0"
                          IsChecked="{Binding Model.SelectedProfile.AutoBuffer, Mode=TwoWay}" Height="19" VerticalAlignment="Top">
                    <CheckBox.ToolTip>
                        <TextBlock>入力ファイルの映像ビットレートからビットレートを計算します。
                            <LineBreak/>映像ビットレートkbps = h264*(a*s+b)
                            <LineBreak/>sは入力映像ビットレート、a,b,h264は設定された値、ただしh264はソースがMPEG2の場合は1
                            <LineBreak/>同時に最大ビットレートが、計算されたビットレートの2倍に設定されます。
                        </TextBlock>
                    </CheckBox.ToolTip>
                </CheckBox>

                <TextBlock Grid.Row="4" Grid.Column="1" Text="a" Margin="4.667,57,0,0" HorizontalAlignment="Left" Width="10" Height="19" VerticalAlignment="Top" />
                <TextBox Grid.Row="4" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Width="50" Height="22" Margin="14.667,53,0,0"
                         IsEnabled="{Binding IsChecked, ElementName=autoBitrateCheck}" Text="{Binding Model.SelectedProfile.BitrateA, Mode=TwoWay, StringFormat=\{0:F\}}" />
                <TextBlock Grid.Row="4" Grid.Column="1" Text="b" Margin="69.667,57,0,0" HorizontalAlignment="Left" Width="10" Height="19" VerticalAlignment="Top" />
                <TextBox Grid.Row="4" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Width="50" Height="22" Margin="79.667,53,0,0"
                         IsEnabled="{Binding IsChecked, ElementName=autoBitrateCheck}" Text="{Binding Model.SelectedProfile.BitrateB, Mode=TwoWay, StringFormat=\{0:F\}}" />
                <TextBlock Grid.Row="4" Grid.Column="1" Text="h264" Margin="134.667,57,0,0" HorizontalAlignment="Left" Width="30" Height="19" VerticalAlignment="Top" />
                <TextBox Grid.Row="4" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Width="50" Height="22" Margin="164.667,53,0,0" 
                         IsEnabled="{Binding IsChecked, ElementName=autoBitrateCheck}" Text="{Binding Model.SelectedProfile.BitrateH264, Mode=TwoWay, StringFormat=\{0:F\}}" />

                <Grid Grid.Row="4" Grid.Column="1" Margin="0,85,0,10" Width="240" HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Grid.ColumnSpan="3" Text="ビットレートサンプル" HorizontalAlignment="Center" />

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="入力映像" HorizontalAlignment="Center" />
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="MPEG2の場合" HorizontalAlignment="Center" />
                    <TextBlock Grid.Row="1" Grid.Column="2" Text="H264の場合" HorizontalAlignment="Center" />

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="18Mbps" HorizontalAlignment="Center" />
                    <TextBlock Grid.Row="3" Grid.Column="0" Text="12Mbps" HorizontalAlignment="Center" />
                    <TextBlock Grid.Row="4" Grid.Column="0" Text="7Mbps" HorizontalAlignment="Center" />

                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Model.SelectedProfile.Bitrate18MPEG2}" HorizontalAlignment="Center" />
                    <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding Model.SelectedProfile.Bitrate12MPEG2}" HorizontalAlignment="Center" />
                    <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding Model.SelectedProfile.Bitrate7MPEG2}" HorizontalAlignment="Center" />

                    <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding Model.SelectedProfile.Bitrate18H264}" HorizontalAlignment="Center" />
                    <TextBlock Grid.Row="3" Grid.Column="2" Text="{Binding Model.SelectedProfile.Bitrate12H264}" HorizontalAlignment="Center" />
                    <TextBlock Grid.Row="4" Grid.Column="2" Text="{Binding Model.SelectedProfile.Bitrate7H264}" HorizontalAlignment="Center" />
                </Grid>

                <TextBlock Grid.Row="5" HorizontalAlignment="Left" Text="ニコニコ実況コメント" VerticalAlignment="Top" Margin="0,45.667,0,0"/>
                <StackPanel Grid.Row="5" Grid.Column="1" Margin="10,0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <CheckBox x:Name="nicoJKCheck" Grid.Row="0" Content="ニコニコ実況コメントを有効にする" Margin="0,3"
                                  IsChecked="{Binding Model.SelectedProfile.EnableNicoJK, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  ToolTip="ニコニコ実況コメントをASS字幕で追加します"/>
                        <CheckBox Grid.Column="1" VerticalAlignment="Center" Content="エラーを無視" Margin="6,3"
                                  IsChecked="{Binding Model.SelectedProfile.IgnoreNicoJKError, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  IsEnabled="{Binding IsChecked, ElementName=nicoJKCheck}"/>
                    </Grid>
                    <CheckBox Grid.Row="1" Content="NicoJK18サーバからコメントを取得する（テスト版）" Margin="0,3"
                                  IsChecked="{Binding Model.SelectedProfile.NicoJK18, Mode=TwoWay}"
                                  IsEnabled="{Binding IsChecked, ElementName=nicoJKCheck}" 
                                  ToolTip="セットアップ不要で取得できるサーバです"/>
                    <Grid Width="240" HorizontalAlignment="Left" IsEnabled="{Binding IsChecked, ElementName=nicoJKCheck}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Grid.ColumnSpan="3" Text="コメント字幕出力フォーマット" HorizontalAlignment="Center" ToolTip="複数選択すると複数出力します" />
                        <TextBlock Grid.Row="1" HorizontalAlignment="Center" Text="1280x720サイズ" Margin="3,3"/>
                        <TextBlock Grid.Row="2" HorizontalAlignment="Center" Text="1920x1080サイズ" Margin="3,3"/>
                        <CheckBox Grid.Row="1" Grid.Column="1" Content="通常" Margin="3,3" IsChecked="{Binding Model.SelectedProfile.NicoJKFormat720S, Mode=TwoWay}"/>
                        <CheckBox Grid.Row="1" Grid.Column="2" Content="半透明" Margin="3,3" IsChecked="{Binding Model.SelectedProfile.NicoJKFormat720T, Mode=TwoWay}"/>
                        <CheckBox Grid.Row="2" Grid.Column="1" Content="通常" Margin="3,3" IsChecked="{Binding Model.SelectedProfile.NicoJKFormat1080S, Mode=TwoWay}"/>
                        <CheckBox Grid.Row="2" Grid.Column="2" Content="半透明" Margin="3,3" IsChecked="{Binding Model.SelectedProfile.NicoJKFormat1080T, Mode=TwoWay}"/>
                    </Grid>
                </StackPanel>
                
                <StackPanel Grid.Row="6" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Left" Height="16" Margin="0,80" Text="その他の設定"/>
                </StackPanel>
                <StackPanel Grid.Row="6" Grid.Column="1" Margin="10,0">
                    <CheckBox Height="16" Margin="0,3"  Content="関連ファイル(*.err,*.program.txtなど)も処理" 
                              IsChecked="{Binding Model.SelectedProfile.MoveEDCBFiles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ToolTip="これらのファイルも一緒にコピー・移動されるようになります。" />
                    <CheckBox Height="16" Margin="0,3"  Content="チャプター・CM解析を無効にする" 
                              IsChecked="{Binding Model.SelectedProfile.DisableChapter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Height="16" Margin="0,3"  Content="字幕を無効にする"
                              IsChecked="{Binding Model.SelectedProfile.DisableSubs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Height="16" Margin="0,3"  Content="マッピングにないDRCS外字は無視する"
                              IsChecked="{Binding Model.SelectedProfile.IgnoreNoDrcsMap, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Height="16" Margin="0,3"  Content="ロゴ検出判定しきい値を低くする" 
                              IsChecked="{Binding Model.SelectedProfile.LooseLogoDetection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ToolTip="ロゴ区間が短いなどでロゴ無し判定を食らう場合などに有効にすると解決するかもです"/>
                    <CheckBox Height="16" Margin="0,3"  Content="ロゴ検出に失敗しても処理を続行する" 
                              IsChecked="{Binding Model.SelectedProfile.IgnoreNoLogo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <CheckBox Height="16" Margin="0,3"  Content="ロゴ消ししない" 
                              IsChecked="{Binding Model.SelectedProfile.NoDelogo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Height="16" Margin="0,3"  Content="メイン以外のフォーマットは結合しない"
                              IsChecked="{Binding Model.SelectedProfile.SplitSub, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Height="16" Margin="0,3"  Content="システムにインストールされているAviSynthプラグインを有効にする" 
                              IsChecked="{Binding Model.SelectedProfile.SystemAviSynthPlugin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Height="16" Margin="0,3"  Content="ネットワーク越しに転送する場合のハッシュチェックを無効にする"
                              IsChecked="{Binding Model.SelectedProfile.DisableHashCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Height="16" Margin="0,3"  Content="ログファイルを出力先に残さない"
                              IsChecked="{Binding Model.SelectedProfile.MoveLogFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Height="16" Margin="0,3"  Content="一時ファイルを削除せずに残す"
                              IsChecked="{Binding Model.SelectedProfile.NoRemoveTmp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>

                <StackPanel Grid.Row="7" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Left" Margin="0,40">
                        スケジューリング<LineBreak/>リソース設定
                    </TextBlock>
                </StackPanel>

                <DockPanel Grid.Row="7" Grid.Column="1" Margin="0,5,0,0">
                    <DockPanel.Resources>
                        <l:VisibilityAndBooleanConverter x:Key="VisibilityAndBooleanConverter"
                                                         ConvertWhenTrue="Visible" ConvertWhenFalse="Collapsed"/>
                    </DockPanel.Resources>
                    <DockPanel DockPanel.Dock="Top">
                        <Border Width="90"/>
                        <TextBlock Width="50" Text="CPU" TextAlignment="Center"/>
                        <TextBlock Width="50" Text="HDD" TextAlignment="Center"/>
                        <TextBlock Width="50" Text="GPU" TextAlignment="Center"/>
                        <Border/>
                    </DockPanel>
                    <RichTextBox IsReadOnly="True" Margin="0,5" DockPanel.Dock="Bottom"
                                 BorderThickness="0" Background="Transparent"
                                 Visibility="{Binding ResourceDescriptionVisible, Converter={StaticResource VisibilityAndBooleanConverter}}">
                        <FlowDocument>
                            <Paragraph TextAlignment="Center">
                                <Bold>リソース設定の説明</Bold>
                            </Paragraph>
                            <Paragraph>
                                リソースはエンコード並列実行時のスケジューリングに用いられます。
                                「基本設定」でリソーススケジューリングをONにした場合のみ有効です。
                                エンコードの各フェーズごとに使用するCPUリソース、HDDリソース、GPUリソースを%で指定します。
                                これはスケジューリングに用いられるだけであって、他の何かに影響するわけではありません。
                                システム内で何かを専有するわけでも、確保するわけでもありません。
                            </Paragraph>
                            <Paragraph>
                                以下のような仕組みで動作します。
                            </Paragraph>
                            <Paragraph>
                                エンコードインスタンスが各フェーズに入るときに、プロファイルに設定されたリソースの確保を試みます。
                                このとき、並列実行している他のインスタンスと合わせて、CPU,HDD,GPUの各リソースが上限の100を超えなけば、
                                すぐ実行されますが、100を超える場合、リソースが確保できるようになるまでエンコードが中断されます。
                            </Paragraph>
                            <Paragraph>
                                例えば、TS解析のHDDリソースを100と設定した場合、
                                そのプロファイルのエンコードのTS解析は同時に１つしか走らなくなります。
                                TS解析以外のフェーズのHDDリソースを0に設定すれば、他のフェーズはTS解析と同時に実行可能です。
                                TS解析のHDDリソースを50と設定すれば、同時に2つまで同時実行可能になります。
                                同じように30と設定すれば3つまで同時実行可能になります。
                            </Paragraph>
                            <Paragraph>
                                リソースはCPU,HDD,GPUで別にカウントしているので、CPUを30%、HDDを100%、GPUを50%使うというような設定も可能です。
                            </Paragraph>
                            <Paragraph>
                                また、上では単純化して説明しましたが、GPUだけはマルチGPUに対応しているので少し挙動が違います。
                                CPUとHDDは上限100のリソースが１つずつしかありませんが、GPUの数と各GPUのリソース上限は
                                「基本設定」で設定可能です。異なるGPUはリソースが別にカウントされます。
                            </Paragraph>
                            <Paragraph>
                                <Bold>重要: </Bold>「基本設定」で設定されるエンコード並列数は、
                                リソース制限により中断されているエンコードインスタンスもカウントされます。
                                リソース設定で並列実行数を制御する場合は、エンコード並列数は多めに設定してください。
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                    <ItemsControl DockPanel.Dock="Left" ItemsSource="{Binding Model.SelectedProfile.Resources}">
                        <ItemsControl.Template>
                            <ControlTemplate>
                                <ItemsPresenter />
                            </ControlTemplate>
                        </ItemsControl.Template>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type m:DisplayResource}">
                                <DockPanel>
                                    <TextBlock Width="90" Text="{Binding Name, Mode=OneWay}" TextAlignment="Right" Margin="0,0,5,0"/>
                                    <TextBox Width="50" Text="{Binding CPU, FallbackValue=0, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox Width="50" Text="{Binding HDD, FallbackValue=0, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBox Width="50" Text="{Binding GPU, FallbackValue=0, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <Border/>
                                </DockPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <StackPanel Width="80" HorizontalAlignment="Left">
                        <Button Content="コピー" Margin="5" Height="20" Command="{Binding Model.SelectedProfile.CopyResourceCommand}"/>
                        <Button Content="貼り付け" Margin="5" Height="20" Command="{Binding Model.SelectedProfile.PasteResourceCommand}"/>
                        <Button Content="使い方" Margin="5" Height="20" Command="{Binding ToggleResourceDescriptionCommand}"/>
                    </StackPanel>
                </DockPanel>

            </Grid>
        </ScrollViewer>
    </DockPanel>
</UserControl>
