<UserControl x:Class="Amatsukaze.Views.QueuePanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:Amatsukaze.ViewModels" 
             xmlns:m="clr-namespace:Amatsukaze.Models" 
             xmlns:c="clr-namespace:Amatsukaze.Components" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             d:DataContext="{d:DesignInstance {x:Type vm:QueueViewModel}}">

    <UserControl.Resources>
        <ResourceDictionary Source="CommonResources.xaml"/>
    </UserControl.Resources>
    
    <i:Interaction.Triggers>
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="FromMain">
            <l:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>
        
        <l:InteractionMessageTrigger MessageKey="Confirm" Messenger="{Binding Messenger}">
            <l:ConfirmationDialogInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <DockPanel>
        <DockPanel.Resources>
            <CollectionViewSource x:Key="ProfileList" Source="{Binding ProfileList}"/>
            <CollectionViewSource x:Key="AutoSelectList" Source="{Binding AutoSelectList}"/>
            <DataTemplate DataType="{x:Type m:DisplayAutoSelect}">
                <TextBlock>自動選択_<Run Text="{Binding Path=Model.Name}"/></TextBlock>
            </DataTemplate>
        </DockPanel.Resources>
        
        <Expander DockPanel.Dock="Top" IsExpanded="{Binding IsPanelOpen, Mode=TwoWay}">
            <Expander.Header>
                <!-- HeaderのコンテナのHorizontalAlignmentをOneWayToSourceを使ってStretchに書き換えるテク -->
                <DockPanel HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}">
                    <TextBlock Text="操作パネル" VerticalAlignment="Center"/>
                    <DockPanel Margin="20,0,0,0">
                        <TextBlock Text="検索" VerticalAlignment="Center"/>
                        <Button DockPanel.Dock="Right" Content="☓" Width="18" Command="{Binding ClearSearchWordCommand}" 
                        IsTabStop="False" Focusable="False"/>
                        <TextBox Margin="3" Text="{Binding SearchWord, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DockPanel>
                </DockPanel>
            </Expander.Header>
            <DockPanel>
                <UniformGrid Columns="4" DockPanel.Dock="Top">
                    <Button Margin="3" Height="24" Content="キャンセル" Command="{Binding CancelCommand}"/>
                    <Button Margin="3" Height="24" Content="削除" Command="{Binding RemoveCommand}"/>
                    <Button Margin="3" Height="24" Content="リトライ" Command="{Binding RetryCommand}"
                            ToolTip="アイテムを追加直後の状態に戻します。"/>
                    <c:DropDownMenuButton Margin="3" Height="24" Content="プロファイル変更">
                        <c:DropDownMenuButton.Style>
                            <Style BasedOn="{StaticResource ButtonStyle}" TargetType="c:DropDownMenuButton"/>
                        </c:DropDownMenuButton.Style>
                        <c:DropDownMenuButton.DropDownContextMenu>
                            <ContextMenu>
                                <ContextMenu.ItemsSource>
                                    <CompositeCollection>
                                        <CollectionContainer Collection="{Binding Source={StaticResource AutoSelectList}}"/>
                                        <CollectionContainer Collection="{Binding Source={StaticResource ProfileList}}"/>
                                    </CompositeCollection>
                                </ContextMenu.ItemsSource>
                                <ContextMenu.ItemContainerStyle>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="Header" Value="{Binding Path=Item}"/>
                                        <Setter Property="Command" Value="{Binding Path=SelectedCommand}"/>
                                    </Style>
                                </ContextMenu.ItemContainerStyle>
                            </ContextMenu>
                        </c:DropDownMenuButton.DropDownContextMenu>
                    </c:DropDownMenuButton>
                    <Button Margin="3" Height="24" Content="複製" Command="{Binding ReAddCommand}"
                            ToolTip="アイテムを同じ設定で複製します"/>
                    <Button Margin="3" Height="24" Content="プロファイル再適用" Command="{Binding RetryUpdateCommand}"
                            ToolTip="プロファイルが更新されていた場合、新しい設定を適用します"/>
                    <Button Margin="3" Height="24" Content="完了した項目を削除" Command="{Binding RemoveCompletedAllCommand}"/>
                    <Slider Margin="3" Height="24" Maximum="2" Value="{Binding ListStyle, Mode=TwoWay}"
                            ToolTip="表示切り替え"/>
                </UniformGrid>
            </DockPanel>
        </Expander>

        <Button DockPanel.Dock="Bottom" Content="キューを凍結" Command="{Binding TogglePauseCommand, Mode=OneWay}"
                ToolTip="凍結状態では新しいエンコードは始まりません。&#xa;キュー操作時に意図しないエンコード開始を防ぐには、キューを凍結してください。">
            <Button.Style>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Foreground" Value="#FFA4A4A4"/>
                    <Setter Property="Background" Value="White"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Model.IsPaused}" Value="True">
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="Background" Value="Yellow"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Grid>
            <Grid.Resources>
                <DataTemplate x:Key="DetailedItemTemplate" DataType="{x:Type m:DisplayQueueItem}">
                    <DockPanel>
                        <DockPanel Width="180" ToolTip="{Binding ServiceString, Mode=OneWay}" Margin="0,0,5,0">
                            <TextBlock>
                                <TextBlock.ToolTip>
                                    <TextBlock>
                                        タスク: <Run Text="{Binding ModeString, Mode=OneWay}"/>
                                        <LineBreak/>放送日時: <Run Text="{Binding TsTimeString, Mode=OneWay}"/>
                                        <LineBreak/>チャンネル: <Run Text="{Binding ServiceString, Mode=OneWay}"/>
                                        <LineBreak/>プロファイル: <Run Text="{Binding Model.Profile.Name}"/><Run Text="{Binding ProfileLastUpdate, Mode=OneWay}"/>
                                    </TextBlock>
                                </TextBlock.ToolTip>
                                タスク: <Run Text="{Binding ModeString, Mode=OneWay}"/>
                                <LineBreak/><Run Text="{Binding TsTimeString, Mode=OneWay}"/>@<Run Text="{Binding ServiceString, Mode=OneWay}"/>
                                <LineBreak/><Run Text="{Binding Model.Profile.Name}"/><Run Text="{Binding ProfileLastUpdate, Mode=OneWay}"/>
                            </TextBlock>
                        </DockPanel>
                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>
                        <ComboBox Height="20" ToolTip="優先度" DockPanel.Dock="Right"
                                ItemsSource="{Binding DataContext.Model.PriorityList, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                SelectedItem="{Binding Priority, Mode=TwoWay}"/>
                        <TextBlock DockPanel.Dock="Top" Margin="0,0,5,0">
                                <Run Text="{Binding Model.DirName, Mode=OneWay}"/>
                                <LineBreak/><Run Text="{Binding Model.FileName, Mode=OneWay}"/>
                            <TextBlock.ToolTip>
                                <TextBlock>
                                        <Run Text="{Binding Model.FileName, Mode=OneWay}"/>
                                        <LineBreak/>ジャンル: <Run Text="{Binding GenreString, Mode=OneWay}"/>
                                        <LineBreak/>映像サイズ: <Run Text="{Binding VideoSizeString, Mode=OneWay}"/>
                                </TextBlock>
                            </TextBlock.ToolTip>
                            </TextBlock>
                        <TextBlock Margin="0,0,5,0"><Run Text="状態: "/><Run Text="{Binding StateString, Mode=OneWay}" /><Run Text=" "/><Run ToolTip="{Binding Model.FailReason, Mode=OneWay}" Text="{Binding Model.FailReason, Mode=OneWay}" /></TextBlock>
                    </DockPanel>
                </DataTemplate>
                <DataTemplate x:Key="NormatlItemTemplate" DataType="{x:Type m:DisplayQueueItem}">
                    <DockPanel>
                        <DockPanel Width="120" ToolTip="{Binding ServiceString, Mode=OneWay}" Margin="0,0,5,0">
                            <TextBlock DockPanel.Dock="Top">
                                    <TextBlock.ToolTip>
                                        <TextBlock>
                                            タスク: <Run Text="{Binding ModeString, Mode=OneWay}"/>
                                            <LineBreak/>放送日時: <Run Text="{Binding TsTimeString, Mode=OneWay}"/>
                                            <LineBreak/>チャンネル: <Run Text="{Binding ServiceString, Mode=OneWay}"/>
                                            <LineBreak/>プロファイル: <Run Text="{Binding Model.Profile.Name}"/><Run Text="{Binding ProfileLastUpdate, Mode=OneWay}"/>
                                    </TextBlock>
                                    </TextBlock.ToolTip>
                                    タスク: <Run Text="{Binding ModeString, Mode=OneWay}"/>
                                    <LineBreak/><Run Text="{Binding Model.Profile.Name}"/>
                                </TextBlock>
                        </DockPanel>
                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>
                        <ComboBox Height="20" ToolTip="優先度" DockPanel.Dock="Right"
                                ItemsSource="{Binding DataContext.Model.PriorityList, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                SelectedItem="{Binding Priority, Mode=TwoWay}"/>
                        <TextBlock DockPanel.Dock="Top" Margin="0,0,5,0">
                                <Run Text="{Binding Model.FileName, Mode=OneWay}"/>
                            <TextBlock.ToolTip>
                                <TextBlock>
                                        <Run Text="{Binding Model.DirName, Mode=OneWay}"/>
                                        <LineBreak/><Run Text="{Binding Model.FileName, Mode=OneWay}"/>
                                        <LineBreak/>ジャンル: <Run Text="{Binding GenreString, Mode=OneWay}"/>
                                        <LineBreak/>映像サイズ: <Run Text="{Binding VideoSizeString, Mode=OneWay}"/>
                                </TextBlock>
                            </TextBlock.ToolTip>
                            </TextBlock>
                        <TextBlock Margin="0,0,5,0"><Run Text="状態: "/><Run Text="{Binding StateString, Mode=OneWay}" /><Run Text=" "/><Run ToolTip="{Binding Model.FailReason, Mode=OneWay}" Text="{Binding Model.FailReason, Mode=OneWay}" /></TextBlock>
                    </DockPanel>
                </DataTemplate>
                <DataTemplate x:Key="ShortItemTemplate" DataType="{x:Type m:DisplayQueueItem}">
                    <DockPanel>
                        <DockPanel Width="100" Margin="0,0,5,0">
                            <TextBlock DockPanel.Dock="Top">
                                <TextBlock.ToolTip>
                                    <TextBlock>
                                        タスク: <Run Text="{Binding ModeString, Mode=OneWay}"/>
                                        <LineBreak/>放送日時: <Run Text="{Binding TsTimeString, Mode=OneWay}"/>
                                        <LineBreak/>チャンネル: <Run Text="{Binding ServiceString, Mode=OneWay}"/>
                                        <LineBreak/>プロファイル: <Run Text="{Binding Model.Profile.Name}"/><Run Text="{Binding ProfileLastUpdate, Mode=OneWay}"/>
                                    </TextBlock>
                                </TextBlock.ToolTip>
                                <Run Text="{Binding ModeString, Mode=OneWay}"/> <Run Text="{Binding StateString, Mode=OneWay}" />
                             </TextBlock>
                        </DockPanel>
                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>
                        <ComboBox Height="20" ToolTip="優先度" DockPanel.Dock="Right"
                                ItemsSource="{Binding DataContext.Model.PriorityList, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                SelectedItem="{Binding Priority, Mode=TwoWay}"/>
                        <TextBlock DockPanel.Dock="Top" Margin="0,0,5,0">
                                <Run Text="{Binding Model.FileName, Mode=OneWay}"/>
                            <TextBlock.ToolTip>
                                <TextBlock>
                                        <Run Text="{Binding Model.DirName, Mode=OneWay}"/>
                                        <LineBreak/><Run Text="{Binding Model.FileName, Mode=OneWay}"/>
                                        <LineBreak/>ジャンル: <Run Text="{Binding GenreString, Mode=OneWay}"/>
                                        <LineBreak/>映像サイズ: <Run Text="{Binding VideoSizeString, Mode=OneWay}"/>
                                        <LineBreak/><Run Text="状態: "/><Run Text="{Binding StateString, Mode=OneWay}" /><Run Text=" "/><Run ToolTip="{Binding Model.FailReason, Mode=OneWay}" Text="{Binding Model.FailReason, Mode=OneWay}" />
                                </TextBlock>
                            </TextBlock.ToolTip>
                            </TextBlock>
                    </DockPanel>
                </DataTemplate>
            </Grid.Resources>
            <ListBox ItemsSource="{Binding Model.QueueItems}"
                PreviewDragOver="ListBox_PreviewDragOver" 
                Drop="ListBox_Drop" AllowDrop="True" 
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                SelectionMode="Extended">
                <ListBox.Style>
                    <Style TargetType="ListBox">
                        <Setter Property="ItemTemplate" Value="{StaticResource DetailedItemTemplate}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ListStyle}" Value="1">
                                <Setter Property="ItemTemplate" Value="{StaticResource NormatlItemTemplate}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ListStyle}" Value="2">
                                <Setter Property="ItemTemplate" Value="{StaticResource ShortItemTemplate}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.Style>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsComplete}" Value="True">
                                <Setter Property="Background" Value="#A0FFFF"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsEncoding}" Value="True">
                                <Setter Property="Background" Value="Green"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsError}" Value="True">
                                <Setter Property="Background" Value="Red"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsPending}" Value="True">
                                <Setter Property="Background" Value="Yellow"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsCanceled}" Value="True">
                                <Setter Property="Foreground" Value="Gray"/>
                            </DataTrigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Plum" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="ロゴ生成" Command="{Binding OpenLogoAnalyzeCommand}" IsEnabled="{Binding IsQueueItemSelected}" />
                        <MenuItem Header="ロゴ生成(TS解析あり)" Command="{Binding OpenLogoAnalyzeSlimTsCommand}" IsEnabled="{Binding IsQueueItemSelected}" />
                        <Separator />
                        <MenuItem Header="プロファイル変更" IsEnabled="{Binding IsQueueItemSelected}">
                            <MenuItem.ItemsSource>
                                <CompositeCollection>
                                    <CollectionContainer Collection="{Binding Source={StaticResource AutoSelectList}}"/>
                                    <CollectionContainer Collection="{Binding Source={StaticResource ProfileList}}"/>
                                </CompositeCollection>
                            </MenuItem.ItemsSource>
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem">
                                    <Setter Property="Header" Value="{Binding Path=Item}"/>
                                    <Setter Property="Command" Value="{Binding Path=SelectedCommand}"/>
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="リトライ" Command="{Binding RetryCommand}" IsEnabled="{Binding IsQueueItemSelected}"
                            ToolTip="アイテムを追加直後の状態に戻します。" />
                        <MenuItem Header="プロファイル再適用" Command="{Binding RetryUpdateCommand}" IsEnabled="{Binding IsQueueItemSelected}"
                            ToolTip="プロファイルが更新されていた場合、新しい設定を適用します" />
                        <MenuItem Header="複製" Command="{Binding ReAddCommand}" IsEnabled="{Binding IsQueueItemSelected}"
                            ToolTip="アイテムを同じ設定で複製します" />
                        <Separator />
                        <MenuItem Header="キャンセル" Command="{Binding CancelCommand}" IsEnabled="{Binding IsQueueItemSelected}" />
                        <MenuItem Header="削除" Command="{Binding RemoveCommand}" IsEnabled="{Binding IsQueueItemSelected}"/>
                        <Separator />
                        <MenuItem Header="完了した項目を削除" Command="{Binding RemoveCompletedAllCommand}"/>
                        <MenuItem Header="ファイルの場所を開く" IsEnabled="{Binding IsQueueItemSelected}" Command="{Binding OpenFileInExplorerCommand}" />
                        <MenuItem Header="ワンセグを表示しない" IsChecked="{Binding Model.Setting.HideOneSeg, Mode=TwoWay}" IsCheckable="True" />
                    </ContextMenu>
                </ListBox.ContextMenu>
            </ListBox>
            <TextBlock Text="ここにエンコードするファイルorフォルダをD&amp;D" FontSize="20"
                    IsHitTestVisible="False"
                    HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFBDBDBD">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Model.QueueItems.Count}" Value="0">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
    </DockPanel>
</UserControl>
