<Window x:Class="Amatsukaze.Views.SelectOutPath"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:Amatsukaze.Views"
        xmlns:vm="clr-namespace:Amatsukaze.ViewModels"
        Title="Amatsukaze 出力先選択" Height="155" Width="370" Loaded="Window_Loaded">

    <Window.DataContext>
        <vm:SelectOutPathViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->
        <l:InteractionMessageTrigger MessageKey="Close" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>

    </i:Interaction.Triggers>

    <Grid>
        <TextBlock x:Name="textBlock" Margin="10,4,10.333,0" TextWrapping="Wrap" VerticalAlignment="Top">
            <Run Text="{Binding InputInfoText, Mode=OneWay}" /><Run Text="&#10;"/>
            <Run Text="出力先フォルダを入力してください"/>
        </TextBlock>
        <TextBox x:Name="textBox" Height="23" Margin="10,40,9.333,0" TextWrapping="Wrap" Text="{Binding OutPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" PreviewDragOver="textBox_PreviewDragOver" Drop="textBox_Drop"/>
        <TextBlock x:Name="textBlock1" Margin="10,68,10.333,0" TextWrapping="Wrap" Text="{Binding Description}" VerticalAlignment="Top" Foreground="Red"/>
        <Button x:Name="button2" Content="OK" Margin="0,90,167.333,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="75" Command="{Binding OkCommand, Mode=OneWay}"/>
        <Button x:Name="button1" Content="デフォルト" Margin="0,90,87.333,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="75" Command="{Binding DefualtCommand, Mode=OneWay}"/>
        <Button x:Name="button" Content="キャンセル" Margin="0,90,7.333,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="75">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <l:WindowInteractionMessageAction>
                        <l:DirectInteractionMessage>
                            <l:WindowActionMessage/>
                        </l:DirectInteractionMessage>
                    </l:WindowInteractionMessageAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
    </Grid>
</Window>
